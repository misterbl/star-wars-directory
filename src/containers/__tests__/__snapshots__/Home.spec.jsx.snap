// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Home matches the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Home
    filmsList={
      Array [
        "films1",
        "films2",
      ]
    }
    history={
      Object {
        "action": "PUSH",
        "block": [MockFunction],
        "createHref": [MockFunction],
        "go": [MockFunction],
        "goBack": [MockFunction],
        "goForward": [MockFunction],
        "length": 123,
        "listen": [MockFunction],
        "location": Object {
          "hash": "",
          "key": "",
          "pathname": "",
          "search": "",
          "state": "",
        },
        "push": [MockFunction],
        "replace": [MockFunction],
      }
    }
    peopleList={
      Array [
        Object {
          "birth_year": "1234",
          "eye_color": "eye_color",
          "gender": "male",
          "hair_color": "hair_color",
          "height": "123",
          "mass": "12",
          "name": "name",
        },
        Object {
          "birth_year": "1234232",
          "eye_color": "black",
          "gender": "female",
          "hair_color": "black",
          "height": "12333",
          "mass": "12333",
          "name": "name2",
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="form-group search-form search-form__body"
        >
          <Formik
            enableReinitialize={false}
            initialValues={
              Object {
                "searchTerm": "",
              }
            }
            isInitialValid={false}
            onSubmit={[Function]}
            render={[Function]}
            validateOnBlur={true}
            validateOnChange={true}
          />
        </div>,
        <div
          className="resistance my-5"
          onClick={[Function]}
        />,
        <div
          className="result-filter my-4 p-3"
        >
          <div
            className="text-white"
          >
            4 RESULTS
          </div>
          <button
            className="btn btn-light"
            onClick={[Function]}
          >
            HIDE PEOPLE
          </button>
          <br />
          <button
            className="btn btn-light"
            onClick={[Function]}
          >
            HIDE FILMS
          </button>
        </div>,
        <React.Fragment>
          <ResultList
            list={
              Array [
                Object {
                  "birth_year": "1234",
                  "eye_color": "eye_color",
                  "gender": "male",
                  "hair_color": "hair_color",
                  "height": "123",
                  "mass": "12",
                  "name": "name",
                },
                Object {
                  "birth_year": "1234232",
                  "eye_color": "black",
                  "gender": "female",
                  "hair_color": "black",
                  "height": "12333",
                  "mass": "12333",
                  "name": "name2",
                },
              ]
            }
            type="Characters"
          >
            <div
              className="d-flex flex-wrap justify-content-around text-white"
            >
              <h4
                className="text-white text-center mt-4"
              >
                Filter the results
              </h4>
              <div>
                <p
                  className="text-center m-0"
                >
                  By film
                </p>
                <Formik
                  enableReinitialize={false}
                  initialValues={
                    Object {
                      "selectedFilm": "",
                    }
                  }
                  isInitialValid={false}
                  onSubmit={[Function]}
                  render={[Function]}
                  validateOnBlur={true}
                  validateOnChange={true}
                />
              </div>
              <h4
                className="text-white text-center mt-4"
              >
                or
              </h4>
              <div>
                <p
                  className="text-center m-0"
                >
                  By gender
                </p>
                <Formik
                  enableReinitialize={false}
                  initialValues={
                    Object {
                      "selectedGender": "",
                    }
                  }
                  isInitialValid={false}
                  onSubmit={[Function]}
                  render={[Function]}
                  validateOnBlur={true}
                  validateOnChange={true}
                />
              </div>
            </div>
          </ResultList>
        </React.Fragment>,
        <ResultList
          list={
            Array [
              "films1",
              "films2",
            ]
          }
          type="Films"
        />,
      ],
      "className": "form-container p-5",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Formik
            enableReinitialize={false}
            initialValues={
              Object {
                "searchTerm": "",
              }
            }
            isInitialValid={false}
            onSubmit={[Function]}
            render={[Function]}
            validateOnBlur={true}
            validateOnChange={true}
          />,
          "className": "form-group search-form search-form__body",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "enableReinitialize": false,
            "initialValues": Object {
              "searchTerm": "",
            },
            "isInitialValid": false,
            "onSubmit": [Function],
            "render": [Function],
            "validateOnBlur": true,
            "validateOnChange": true,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "resistance my-5",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="text-white"
            >
              4 RESULTS
            </div>,
            <button
              className="btn btn-light"
              onClick={[Function]}
            >
              HIDE PEOPLE
            </button>,
            <br />,
            <button
              className="btn btn-light"
              onClick={[Function]}
            >
              HIDE FILMS
            </button>,
          ],
          "className": "result-filter my-4 p-3",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "4 RESULTS",
              "className": "text-white",
            },
            "ref": null,
            "rendered": "4 RESULTS",
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "HIDE PEOPLE",
              "className": "btn btn-light",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "HIDE PEOPLE",
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "HIDE FILMS",
              "className": "btn btn-light",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "HIDE FILMS",
            "type": "button",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <ResultList
            list={
              Array [
                Object {
                  "birth_year": "1234",
                  "eye_color": "eye_color",
                  "gender": "male",
                  "hair_color": "hair_color",
                  "height": "123",
                  "mass": "12",
                  "name": "name",
                },
                Object {
                  "birth_year": "1234232",
                  "eye_color": "black",
                  "gender": "female",
                  "hair_color": "black",
                  "height": "12333",
                  "mass": "12333",
                  "name": "name2",
                },
              ]
            }
            type="Characters"
          >
            <div
              className="d-flex flex-wrap justify-content-around text-white"
            >
              <h4
                className="text-white text-center mt-4"
              >
                Filter the results
              </h4>
              <div>
                <p
                  className="text-center m-0"
                >
                  By film
                </p>
                <Formik
                  enableReinitialize={false}
                  initialValues={
                    Object {
                      "selectedFilm": "",
                    }
                  }
                  isInitialValid={false}
                  onSubmit={[Function]}
                  render={[Function]}
                  validateOnBlur={true}
                  validateOnChange={true}
                />
              </div>
              <h4
                className="text-white text-center mt-4"
              >
                or
              </h4>
              <div>
                <p
                  className="text-center m-0"
                >
                  By gender
                </p>
                <Formik
                  enableReinitialize={false}
                  initialValues={
                    Object {
                      "selectedGender": "",
                    }
                  }
                  isInitialValid={false}
                  onSubmit={[Function]}
                  render={[Function]}
                  validateOnBlur={true}
                  validateOnChange={true}
                />
              </div>
            </div>
          </ResultList>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <div
              className="d-flex flex-wrap justify-content-around text-white"
            >
              <h4
                className="text-white text-center mt-4"
              >
                Filter the results
              </h4>
              <div>
                <p
                  className="text-center m-0"
                >
                  By film
                </p>
                <Formik
                  enableReinitialize={false}
                  initialValues={
                    Object {
                      "selectedFilm": "",
                    }
                  }
                  isInitialValid={false}
                  onSubmit={[Function]}
                  render={[Function]}
                  validateOnBlur={true}
                  validateOnChange={true}
                />
              </div>
              <h4
                className="text-white text-center mt-4"
              >
                or
              </h4>
              <div>
                <p
                  className="text-center m-0"
                >
                  By gender
                </p>
                <Formik
                  enableReinitialize={false}
                  initialValues={
                    Object {
                      "selectedGender": "",
                    }
                  }
                  isInitialValid={false}
                  onSubmit={[Function]}
                  render={[Function]}
                  validateOnBlur={true}
                  validateOnChange={true}
                />
              </div>
            </div>,
            "list": Array [
              Object {
                "birth_year": "1234",
                "eye_color": "eye_color",
                "gender": "male",
                "hair_color": "hair_color",
                "height": "123",
                "mass": "12",
                "name": "name",
              },
              Object {
                "birth_year": "1234232",
                "eye_color": "black",
                "gender": "female",
                "hair_color": "black",
                "height": "12333",
                "mass": "12333",
                "name": "name2",
              },
            ],
            "type": "Characters",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h4
                  className="text-white text-center mt-4"
                >
                  Filter the results
                </h4>,
                <div>
                  <p
                    className="text-center m-0"
                  >
                    By film
                  </p>
                  <Formik
                    enableReinitialize={false}
                    initialValues={
                      Object {
                        "selectedFilm": "",
                      }
                    }
                    isInitialValid={false}
                    onSubmit={[Function]}
                    render={[Function]}
                    validateOnBlur={true}
                    validateOnChange={true}
                  />
                </div>,
                <h4
                  className="text-white text-center mt-4"
                >
                  or
                </h4>,
                <div>
                  <p
                    className="text-center m-0"
                  >
                    By gender
                  </p>
                  <Formik
                    enableReinitialize={false}
                    initialValues={
                      Object {
                        "selectedGender": "",
                      }
                    }
                    isInitialValid={false}
                    onSubmit={[Function]}
                    render={[Function]}
                    validateOnBlur={true}
                    validateOnChange={true}
                  />
                </div>,
              ],
              "className": "d-flex flex-wrap justify-content-around text-white",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Filter the results",
                  "className": "text-white text-center mt-4",
                },
                "ref": null,
                "rendered": "Filter the results",
                "type": "h4",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <p
                      className="text-center m-0"
                    >
                      By film
                    </p>,
                    <Formik
                      enableReinitialize={false}
                      initialValues={
                        Object {
                          "selectedFilm": "",
                        }
                      }
                      isInitialValid={false}
                      onSubmit={[Function]}
                      render={[Function]}
                      validateOnBlur={true}
                      validateOnChange={true}
                    />,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "By film",
                      "className": "text-center m-0",
                    },
                    "ref": null,
                    "rendered": "By film",
                    "type": "p",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "enableReinitialize": false,
                      "initialValues": Object {
                        "selectedFilm": "",
                      },
                      "isInitialValid": false,
                      "onSubmit": [Function],
                      "render": [Function],
                      "validateOnBlur": true,
                      "validateOnChange": true,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "or",
                  "className": "text-white text-center mt-4",
                },
                "ref": null,
                "rendered": "or",
                "type": "h4",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <p
                      className="text-center m-0"
                    >
                      By gender
                    </p>,
                    <Formik
                      enableReinitialize={false}
                      initialValues={
                        Object {
                          "selectedGender": "",
                        }
                      }
                      isInitialValid={false}
                      onSubmit={[Function]}
                      render={[Function]}
                      validateOnBlur={true}
                      validateOnChange={true}
                    />,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "By gender",
                      "className": "text-center m-0",
                    },
                    "ref": null,
                    "rendered": "By gender",
                    "type": "p",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "enableReinitialize": false,
                      "initialValues": Object {
                        "selectedGender": "",
                      },
                      "isInitialValid": false,
                      "onSubmit": [Function],
                      "render": [Function],
                      "validateOnBlur": true,
                      "validateOnChange": true,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
          "type": [Function],
        },
        "type": Symbol(react.fragment),
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "list": Array [
            "films1",
            "films2",
          ],
          "type": "Films",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "main",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="form-group search-form search-form__body"
          >
            <Formik
              enableReinitialize={false}
              initialValues={
                Object {
                  "searchTerm": "",
                }
              }
              isInitialValid={false}
              onSubmit={[Function]}
              render={[Function]}
              validateOnBlur={true}
              validateOnChange={true}
            />
          </div>,
          <div
            className="resistance my-5"
            onClick={[Function]}
          />,
          <div
            className="result-filter my-4 p-3"
          >
            <div
              className="text-white"
            >
              4 RESULTS
            </div>
            <button
              className="btn btn-light"
              onClick={[Function]}
            >
              HIDE PEOPLE
            </button>
            <br />
            <button
              className="btn btn-light"
              onClick={[Function]}
            >
              HIDE FILMS
            </button>
          </div>,
          <React.Fragment>
            <ResultList
              list={
                Array [
                  Object {
                    "birth_year": "1234",
                    "eye_color": "eye_color",
                    "gender": "male",
                    "hair_color": "hair_color",
                    "height": "123",
                    "mass": "12",
                    "name": "name",
                  },
                  Object {
                    "birth_year": "1234232",
                    "eye_color": "black",
                    "gender": "female",
                    "hair_color": "black",
                    "height": "12333",
                    "mass": "12333",
                    "name": "name2",
                  },
                ]
              }
              type="Characters"
            >
              <div
                className="d-flex flex-wrap justify-content-around text-white"
              >
                <h4
                  className="text-white text-center mt-4"
                >
                  Filter the results
                </h4>
                <div>
                  <p
                    className="text-center m-0"
                  >
                    By film
                  </p>
                  <Formik
                    enableReinitialize={false}
                    initialValues={
                      Object {
                        "selectedFilm": "",
                      }
                    }
                    isInitialValid={false}
                    onSubmit={[Function]}
                    render={[Function]}
                    validateOnBlur={true}
                    validateOnChange={true}
                  />
                </div>
                <h4
                  className="text-white text-center mt-4"
                >
                  or
                </h4>
                <div>
                  <p
                    className="text-center m-0"
                  >
                    By gender
                  </p>
                  <Formik
                    enableReinitialize={false}
                    initialValues={
                      Object {
                        "selectedGender": "",
                      }
                    }
                    isInitialValid={false}
                    onSubmit={[Function]}
                    render={[Function]}
                    validateOnBlur={true}
                    validateOnChange={true}
                  />
                </div>
              </div>
            </ResultList>
          </React.Fragment>,
          <ResultList
            list={
              Array [
                "films1",
                "films2",
              ]
            }
            type="Films"
          />,
        ],
        "className": "form-container p-5",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Formik
              enableReinitialize={false}
              initialValues={
                Object {
                  "searchTerm": "",
                }
              }
              isInitialValid={false}
              onSubmit={[Function]}
              render={[Function]}
              validateOnBlur={true}
              validateOnChange={true}
            />,
            "className": "form-group search-form search-form__body",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "enableReinitialize": false,
              "initialValues": Object {
                "searchTerm": "",
              },
              "isInitialValid": false,
              "onSubmit": [Function],
              "render": [Function],
              "validateOnBlur": true,
              "validateOnChange": true,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "resistance my-5",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="text-white"
              >
                4 RESULTS
              </div>,
              <button
                className="btn btn-light"
                onClick={[Function]}
              >
                HIDE PEOPLE
              </button>,
              <br />,
              <button
                className="btn btn-light"
                onClick={[Function]}
              >
                HIDE FILMS
              </button>,
            ],
            "className": "result-filter my-4 p-3",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "4 RESULTS",
                "className": "text-white",
              },
              "ref": null,
              "rendered": "4 RESULTS",
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "HIDE PEOPLE",
                "className": "btn btn-light",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "HIDE PEOPLE",
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "br",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "HIDE FILMS",
                "className": "btn btn-light",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "HIDE FILMS",
              "type": "button",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <ResultList
              list={
                Array [
                  Object {
                    "birth_year": "1234",
                    "eye_color": "eye_color",
                    "gender": "male",
                    "hair_color": "hair_color",
                    "height": "123",
                    "mass": "12",
                    "name": "name",
                  },
                  Object {
                    "birth_year": "1234232",
                    "eye_color": "black",
                    "gender": "female",
                    "hair_color": "black",
                    "height": "12333",
                    "mass": "12333",
                    "name": "name2",
                  },
                ]
              }
              type="Characters"
            >
              <div
                className="d-flex flex-wrap justify-content-around text-white"
              >
                <h4
                  className="text-white text-center mt-4"
                >
                  Filter the results
                </h4>
                <div>
                  <p
                    className="text-center m-0"
                  >
                    By film
                  </p>
                  <Formik
                    enableReinitialize={false}
                    initialValues={
                      Object {
                        "selectedFilm": "",
                      }
                    }
                    isInitialValid={false}
                    onSubmit={[Function]}
                    render={[Function]}
                    validateOnBlur={true}
                    validateOnChange={true}
                  />
                </div>
                <h4
                  className="text-white text-center mt-4"
                >
                  or
                </h4>
                <div>
                  <p
                    className="text-center m-0"
                  >
                    By gender
                  </p>
                  <Formik
                    enableReinitialize={false}
                    initialValues={
                      Object {
                        "selectedGender": "",
                      }
                    }
                    isInitialValid={false}
                    onSubmit={[Function]}
                    render={[Function]}
                    validateOnBlur={true}
                    validateOnChange={true}
                  />
                </div>
              </div>
            </ResultList>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <div
                className="d-flex flex-wrap justify-content-around text-white"
              >
                <h4
                  className="text-white text-center mt-4"
                >
                  Filter the results
                </h4>
                <div>
                  <p
                    className="text-center m-0"
                  >
                    By film
                  </p>
                  <Formik
                    enableReinitialize={false}
                    initialValues={
                      Object {
                        "selectedFilm": "",
                      }
                    }
                    isInitialValid={false}
                    onSubmit={[Function]}
                    render={[Function]}
                    validateOnBlur={true}
                    validateOnChange={true}
                  />
                </div>
                <h4
                  className="text-white text-center mt-4"
                >
                  or
                </h4>
                <div>
                  <p
                    className="text-center m-0"
                  >
                    By gender
                  </p>
                  <Formik
                    enableReinitialize={false}
                    initialValues={
                      Object {
                        "selectedGender": "",
                      }
                    }
                    isInitialValid={false}
                    onSubmit={[Function]}
                    render={[Function]}
                    validateOnBlur={true}
                    validateOnChange={true}
                  />
                </div>
              </div>,
              "list": Array [
                Object {
                  "birth_year": "1234",
                  "eye_color": "eye_color",
                  "gender": "male",
                  "hair_color": "hair_color",
                  "height": "123",
                  "mass": "12",
                  "name": "name",
                },
                Object {
                  "birth_year": "1234232",
                  "eye_color": "black",
                  "gender": "female",
                  "hair_color": "black",
                  "height": "12333",
                  "mass": "12333",
                  "name": "name2",
                },
              ],
              "type": "Characters",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <h4
                    className="text-white text-center mt-4"
                  >
                    Filter the results
                  </h4>,
                  <div>
                    <p
                      className="text-center m-0"
                    >
                      By film
                    </p>
                    <Formik
                      enableReinitialize={false}
                      initialValues={
                        Object {
                          "selectedFilm": "",
                        }
                      }
                      isInitialValid={false}
                      onSubmit={[Function]}
                      render={[Function]}
                      validateOnBlur={true}
                      validateOnChange={true}
                    />
                  </div>,
                  <h4
                    className="text-white text-center mt-4"
                  >
                    or
                  </h4>,
                  <div>
                    <p
                      className="text-center m-0"
                    >
                      By gender
                    </p>
                    <Formik
                      enableReinitialize={false}
                      initialValues={
                        Object {
                          "selectedGender": "",
                        }
                      }
                      isInitialValid={false}
                      onSubmit={[Function]}
                      render={[Function]}
                      validateOnBlur={true}
                      validateOnChange={true}
                    />
                  </div>,
                ],
                "className": "d-flex flex-wrap justify-content-around text-white",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Filter the results",
                    "className": "text-white text-center mt-4",
                  },
                  "ref": null,
                  "rendered": "Filter the results",
                  "type": "h4",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <p
                        className="text-center m-0"
                      >
                        By film
                      </p>,
                      <Formik
                        enableReinitialize={false}
                        initialValues={
                          Object {
                            "selectedFilm": "",
                          }
                        }
                        isInitialValid={false}
                        onSubmit={[Function]}
                        render={[Function]}
                        validateOnBlur={true}
                        validateOnChange={true}
                      />,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "By film",
                        "className": "text-center m-0",
                      },
                      "ref": null,
                      "rendered": "By film",
                      "type": "p",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "enableReinitialize": false,
                        "initialValues": Object {
                          "selectedFilm": "",
                        },
                        "isInitialValid": false,
                        "onSubmit": [Function],
                        "render": [Function],
                        "validateOnBlur": true,
                        "validateOnChange": true,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "or",
                    "className": "text-white text-center mt-4",
                  },
                  "ref": null,
                  "rendered": "or",
                  "type": "h4",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <p
                        className="text-center m-0"
                      >
                        By gender
                      </p>,
                      <Formik
                        enableReinitialize={false}
                        initialValues={
                          Object {
                            "selectedGender": "",
                          }
                        }
                        isInitialValid={false}
                        onSubmit={[Function]}
                        render={[Function]}
                        validateOnBlur={true}
                        validateOnChange={true}
                      />,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "By gender",
                        "className": "text-center m-0",
                      },
                      "ref": null,
                      "rendered": "By gender",
                      "type": "p",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "enableReinitialize": false,
                        "initialValues": Object {
                          "selectedGender": "",
                        },
                        "isInitialValid": false,
                        "onSubmit": [Function],
                        "render": [Function],
                        "validateOnBlur": true,
                        "validateOnChange": true,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
            "type": [Function],
          },
          "type": Symbol(react.fragment),
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "list": Array [
              "films1",
              "films2",
            ],
            "type": "Films",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "main",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
