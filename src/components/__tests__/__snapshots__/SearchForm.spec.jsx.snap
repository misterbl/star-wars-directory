// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SearchForm matches the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SearchForm
    handleSubmit={[MockFunction]}
    setFieldValue={[MockFunction]}
    values={
      Object {
        "searchTerm": "searchTerm",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <label
          htmlFor="searchTerm"
        />,
        <input
          autoComplete="off"
          className="form-control mb-4"
          id="searchTerm"
          name="searchTerm"
          onChange={[Function]}
          placeholder="SEARCH STAR WARS"
          type="text"
          value="searchTerm"
        />,
        <button
          className="search-button"
          type="submit"
        />,
      ],
      "onSubmit": [MockFunction],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "htmlFor": "searchTerm",
        },
        "ref": null,
        "rendered": null,
        "type": "label",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "autoComplete": "off",
          "className": "form-control mb-4",
          "id": "searchTerm",
          "name": "searchTerm",
          "onChange": [Function],
          "placeholder": "SEARCH STAR WARS",
          "type": "text",
          "value": "searchTerm",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "search-button",
          "type": "submit",
        },
        "ref": null,
        "rendered": null,
        "type": "button",
      },
    ],
    "type": "form",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <label
            htmlFor="searchTerm"
          />,
          <input
            autoComplete="off"
            className="form-control mb-4"
            id="searchTerm"
            name="searchTerm"
            onChange={[Function]}
            placeholder="SEARCH STAR WARS"
            type="text"
            value="searchTerm"
          />,
          <button
            className="search-button"
            type="submit"
          />,
        ],
        "onSubmit": [MockFunction],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "htmlFor": "searchTerm",
          },
          "ref": null,
          "rendered": null,
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "autoComplete": "off",
            "className": "form-control mb-4",
            "id": "searchTerm",
            "name": "searchTerm",
            "onChange": [Function],
            "placeholder": "SEARCH STAR WARS",
            "type": "text",
            "value": "searchTerm",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "search-button",
            "type": "submit",
          },
          "ref": null,
          "rendered": null,
          "type": "button",
        },
      ],
      "type": "form",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
